//
// Copyright 2018 Asylo authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto2";

package asylo;

import "asylo/enclave.proto";
import "asylo/identity/identity_acl.proto";

extend EnclaveInput {
  optional ClientEnclaveInput client_enclave_input = 225075181;
}

extend EnclaveOutput {
  // The response from the gRPC server.
  optional string rpc_result = 200746417;
}

// Enumeration of all gRPC credentials options types.
enum GrpcCredentialsOptionsType {
  UNKNOWN_GRPC_CREDENTIALS_OPTIONS = 0;
  NULL_GRPC_CREDENTIALS_OPTIONS = 1;
  SGX_LOCAL_GRPC_CREDENTIALS_OPTIONS = 2;
  SGX_AGE_REMOTE_GRPC_CREDENTIALS_OPTIONS = 3;
}

// Input for a ClientEnclave.
message ClientEnclaveInput {
  // Configuration options for the gRPC channel credentials.
  repeated GrpcCredentialsOptionsType self_grpc_creds_options = 1;
  repeated GrpcCredentialsOptionsType peer_grpc_creds_options = 2;

  // The address of the server to contact.
  optional string server_address = 3;

  // The input to the Hello RPC.
  optional string rpc_input = 4;

  // Connection deadline in milliseconds.
  optional int64 connection_deadline_milliseconds = 5;

  // ACL for the server.
  optional IdentityAclPredicate peer_acl = 6;
}

//
// Copyright 2019 Asylo authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto2";

package asylo;

import "asylo/identity/attestation/sgx/internal/remote_assertion.proto";

// A request message containing user-data that should be bound to the generated
// assertion.
message GenerateSgxRemoteAssertionRequest {
  optional bytes user_data = 1;
}

// A response message containing the generated assertion that is bound to the
// user data provided in the request.
message GenerateSgxRemoteAssertionResponse {
  optional sgx.RemoteAssertion assertion = 1;
}

// Defines a service that generates SGX remote assertions for local SGX
// enclaves.
//
// Remote assertions can only be generated for SGX enclave callers.
// Consequently, callers of this service must authenticate using
// SGX-code-identity credentials. The service extracts the caller's SGX code
// identity from the authentication properties of the underlying channel and
// uses it to produce an SGX remote assertion.
service SgxRemoteAssertionGenerator {
  // Generates an SGX remote assertion that fulfills the given request.
  rpc GenerateSgxRemoteAssertion(GenerateSgxRemoteAssertionRequest)
      returns (GenerateSgxRemoteAssertionResponse) {}
}
